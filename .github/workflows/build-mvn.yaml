# This workflow will do a clean install of maven dependencies, build the source code,
# run unit tests, perform a Sonarqube scan, and publish docker images from master/main.

# Common FOLIO configurable environment variables to set:
# - SQ_ROOT_DIR (root SQ directory to scan relative to top-level directory)
# - PUBLISH_MOD_DESCRIPTOR (boolean 'true' or 'false')

name: build-mvn snapshot
on: [push, pull_request]

jobs:
  github-actions-ci:
    env:
      JAVA_VERSION: 17
      SQ_ROOT_DIR: './src'
      DOCKER_REPOSITORY: "folioci"
      FOLIO_TOOLS: "https://github.com/folio-org/folio-tools.git"
      FOLIO_MAVEN_REPOSITORY: 'https://repository.folio.org/repository/maven-folio'
      FOLIO_MD_REGISTRY: ''
      MOD_DESCRIPTOR: "target/ModuleDescriptor.json"
      PUBLISH_MOD_DESCRIPTOR: 'true'



    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.REF }}
      
      - name: Use Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set module name and version
        run: | 
          echo "MODULE_NAME=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV
          echo "MODULE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        
      - run: git rev-parse HEAD
      - run: git config remote.origin.url
      - run: java --version

      - name: Maven Build Stage
        run: |
          mvn dependency:list | { grep -i snapshot || true; }
          mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install org.jacoco:jacoco-maven-plugin:report
          
          
      - name: Generate Module Descriptor
        if : ${{ env.PUBLISH_MOD_DESCRIPTOR  == 'true' }}
        run: >
          if test -f "${{ env.MOD_DESCRIPTOR }}"; then
            echo "ModuleDescriptor.json found!!!"
            cat ${{ env.MOD_DESCRIPTOR }}
            mv ${{ env.MOD_DESCRIPTOR }} MOD_DESCRIPTOR.orig
          else
            echo "ModuleDescriptor.json not found.."
          fi
    
      - name: Docker publish
        if: ${{ github.ref == 'refs/heads/master' || github.ref  == 'refs/heads/main' }}
        run: |
          docker build --pull=true --no-cache=true -t ${{ env.module_name }}:${{ env.module_version }} .
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag ${{ env.module_name }}:${{ env.module_version }} $dockerRepo/${{ env.module_name }}:${{ env.module_version }}
          docker tag ${{ env.module_name }}:${{ env.module_version }} $dockerRepo/${{ env.module_name }}:latest
          docker push ${{ env.DOCKER_REPOSITORY }}/${{ env.module_name }}:${{ env.module_version }}
          docker push ${{ env.DOCKER_REPOSITORY }}/${{ env.module_name }}:latest
