#log4j.rootLogger=INFO, stdout, R
#
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#
## Pattern to output the caller's file name and line number.
#log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%t] %-5p (%F:%L) - %m%n
#
#log4j.appender.R=org.apache.log4j.RollingFileAppender
#log4j.appender.R.File=${log_path}
#
#log4j.appender.R.MaxFileSize=50MB
## Keep one backup file
#log4j.appender.R.MaxBackupIndex=10
##dont flush writes after each write to improve performance
##only relevant for massive write loads
#log4j.appender.R.bufferedIO=false
##log4j.appender.R.bufferSize=128
#log4j.appender.R.immediateFlush=true
#
#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%t] %-5p %c{1}:%L - %m%n



#handlers=java.util.logging.ConsoleHandler,java.util.logging.FileHandler
handlers=java.util.logging.ConsoleHandler
java.util.logging.SimpleFormatter.format=[%1$tc] %3$s %4$s %5$s %6$s\n
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
java.util.logging.ConsoleHandler.level=FINEST
#java.util.logging.FileHandler.level=INFO
#java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
#java.util.logging.FileHandler.pattern=${log_path}

.level=INFO
io.vertx.ext.web.level=INFO
io.vertx.level=INFO
io.netty.util.internal.PlatformDependent.level=SEVERE
#org.folio.rest.level=FINEST
org.folio.service.level=FINE
