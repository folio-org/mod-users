#%RAML 1.0
title: Users
version: v16.0
baseUri: http://github.com/org/folio/mod-users

documentation:
  - title: mod-users API
    content: This documents the API calls that can be made to query and manage users of the system

types:
  user: !include userdata.json
  userdataCollection: !include userdataCollection.json
  outboxEventLog: !include outboxEventLog.json
  profilePicture: !include profile_picture.json
  userEvent: !include userEvent.json
  config: !include configuration.json
  errors: !include raml-util/schemas/errors.schema

traits:
  orderable: !include raml-util/traits/orderable.raml
  pageable: !include raml-util/traits/pageable.raml
  searchable: !include raml-util/traits/searchable.raml
  language: !include raml-util/traits/language.raml
  validate: !include raml-util/traits/validation.raml

resourceTypes:
  collection: !include raml-util/rtypes/collection.raml
  collection-item: !include raml-util/rtypes/item-collection.raml
  get-only: !include raml-util/rtypes/get-only.raml
  post-empty-body: !include raml-util/rtypes/post-empty-body.raml

/users:
  type:
    collection:
      exampleCollection: !include examples/user_collection.sample
      exampleItem: !include examples/user.sample
      schemaCollection: userdataCollection
      schemaItem: user
  get:
    is: [
      searchable: {description: "", example: "active=true sortBy username"},
      orderable: {fieldsList: "field A, field B"},
      pageable
    ]
    description: Return a list of users
  post:
    is: [validate]
    description: Create a user
  delete:
    description: Delete a collection of users selected by a CQL query; this doesn't delete proxyFor records that reference them
    is: [
      searchable: {description: "CQL query", example: "active==false"}
    ]
    responses:
      204:
        description: "All selected users deleted"
      400:
        description: "Bad request"
        body:
          text/plain:
            example: "Invalid CQL syntax"
      500:
        description: "Internal server error, e.g. due to misconfiguration"
        body:
          text/plain:
            example: "Internal server error, contact administrator"
  /{userId}:
    type:
      collection-item:
        exampleItem: !include examples/user.sample
        schema: user
    get:
      description: Get a single user
  /expire/timer:
    post:
      description: Expire timer (timer event)
      responses:
        204:
          description: Expired ok
        400:
          description: User Error
          body:
            text/plain:
        500:
          description: Internal error
          body:
            text/plain:
  /outbox/process:
    post:
      description: Read audit events from DB and send them to Kafka
  /profile-picture:
    post:
      description: Upload user profile picture
      body:
        application/octet-stream:
      responses:
        201:
          description: "OK"
          body:
            application/json:
              type: profilePicture
        400:
          description: "Bad request"
          body:
            application/json:
        500:
          description: "Internal server error"
          body:
            application/json:

  /profile-picture/{profileId}:
    get:
      responses:
        200:
          body:
            application/json:
              type: profilePicture
        404:
          description: "profile picture not found"
          body:
            text/plain:
              example: "profile picture not found"
        400:
          description: "Bad request"
          body:
            application/json:
    put:
      description: update user profile picture
      body:
        application/octet-stream:
      responses:
        200:
          body:
            application/json:
              type: profilePicture
        404:
          description: "profile picture not found"
          body:
            text/plain:
              example: "profile picture not found"
        400:
          description: "Bad request"
          body:
            application/json:
        500:
          description: "Internal server error"
          body:
            application/json:
    delete:
      description: "delete user profile picture"
      responses:
        204:
          description: "profile picture deleted"
        404:
          description: "profile picture not found"
          body:
            text/plain:
              example: "profile picture not found"
        500:
          description: "Internal server error"
          body:
            application/json:
  /configurations/entry:
    get:
      responses:
        200:
          body:
            application/json:
              type: config
              example: !include examples/config.sample
        404:
          description: "configuration not found"
          body:
            text/plain:
              example: "configuration not found"
        400:
          description: "Bad request"
          body:
            text/plain:
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            text/plain:
              example: "Internal server error, contact administrator"
  /configurations/entry/{configId}:
    put:
      body:
        application/json:
          type: config
          example: !include examples/config.sample
      responses:
        204:
          description: "configuration updated"
        404:
          description: "configuration not found"
          body:
            text/plain:
              example: "configuration not found"
        400:
          description: "Bad request"
          body:
            text/plain:
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            text/plain:
              example: "Internal server error, contact administrator"
